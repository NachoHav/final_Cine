/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cine.vista;

import cine.controlador.ButacaData;
import cine.controlador.ClienteData;
import cine.controlador.Conexion;
import cine.controlador.ProyeccionData;
import cine.controlador.TicketData;
import cine.modelo.Butaca;
import cine.modelo.Cliente;
import cine.modelo.Proyeccion;
import cine.modelo.Ticket;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;

/**
 *
 * @author Arezlon
 */
public class AltaTicketsView extends javax.swing.JInternalFrame {
    private ClienteData clienteData;
    private ProyeccionData proyeccionData;
    private TicketData ticketData;
    private ButacaData butacaData;
    private Conexion con;
    private ArrayList<Cliente> listaClientes;
    private ArrayList<Proyeccion> listaProyecciones;
    /**
     * Creates new form AltaTicketsView
     */
    public AltaTicketsView() {
        initComponents();
        
        con = new Conexion();
        clienteData = new ClienteData(con);
        proyeccionData = new ProyeccionData(con);
        ticketData = new TicketData(con);
        butacaData = new ButacaData(con);
        
        cargarDesplegableClientes();
        cargarDesplegableProyecciones();
        cargarDesplegablesButacas();
    }
    
    private void recargarTodo(){
        cargarDesplegableClientes();
        cargarDesplegableProyecciones();
        cargarDesplegablesButacas();
    }
    
    private void cargarDesplegableClientes(){
        jCBClientes.removeAllItems();
        listaClientes=(ArrayList)clienteData.obtenerClientes();
        for (Cliente c:listaClientes) {
            jCBClientes.addItem(c);
        }
    }
    
     private void cargarDesplegableProyecciones(){
        listaProyecciones = (ArrayList)proyeccionData.obtenerProyecciones();
        for(Proyeccion pro : listaProyecciones)
           jCBProyecciones.addItem(pro);
    }
     
     private void cargarDesplegablesButacas(){
         jCBColumna.removeAllItems();
         jCBFila.removeAllItems();
         Proyeccion seleccionada = (Proyeccion)jCBProyecciones.getSelectedItem();
         int totalButacas = seleccionada.getSala().getCantButacas();
         int row = totalButacas/20;
         
         for(int i=1; i<=20;i++){
             jCBColumna.addItem("Columna "+i);
         }
         
         for(int i=1; i<=row;i++){
             jCBFila.addItem("Fila "+i);
         }
         
     }
     
     private double calcularTotal(){
         int metodoPago = (int)jCBMetodo.getSelectedIndex();
         
         switch(metodoPago){
             case 0:
                 return 0;
             case 1:
                 return 189.99;
             case 2:
                 return 229.99;
             case 3:
                 return 229.99;
             case 4:
                 return 249.99;
             default:
                 return 0;   
         }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBClientes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jCBProyecciones = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jCBFila = new javax.swing.JComboBox<>();
        jCBColumna = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jCBMetodo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLTotal = new javax.swing.JLabel();
        jLAlerta = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jBImprimir = new javax.swing.JButton();

        setClosable(true);
        setTitle("Alta de Tickets");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Cliente:");

        jCBProyecciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBProyeccionesItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Proyecciones:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Butaca:");

        jCBMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción...", "Efectivo", "Tarjeta de débito", "Tarjeta de crédito", "MercadoPago" }));
        jCBMetodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBMetodoItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Método de pago:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Total a pagar:");

        jLTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLTotal.setText("$0");

        jLAlerta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLAlerta.setText("-PLACEHOLDER ALERTAS-");

        jBImprimir.setText("Imprimir");
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCBClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCBProyecciones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCBFila, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCBColumna, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(3, 3, 3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 35, Short.MAX_VALUE)
                                        .addComponent(jLTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCBMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(65, 65, 65))
                    .addComponent(jLAlerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBImprimir)
                .addGap(185, 185, 185))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBProyecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBFila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBColumna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLAlerta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBImprimir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBProyeccionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBProyeccionesItemStateChanged
        cargarDesplegablesButacas();
    }//GEN-LAST:event_jCBProyeccionesItemStateChanged

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        Cliente cliente = (Cliente)jCBClientes.getSelectedItem();
        Proyeccion proyeccion = (Proyeccion)jCBProyecciones.getSelectedItem();
        
        String fila = (String)jCBFila.getSelectedItem();
        String columna = (String)jCBColumna.getSelectedItem();
                
        //Butaca butaca = new Butaca(proyeccion, fila, columna);
        
        Color colorError = new Color(255, 0, 0);
        Color colorExito = new Color(7, 110, 46);
        double total = calcularTotal();
        
        
        if(calcularTotal()==0){
            jLAlerta.setText("Error: Seleccione un metodo de pago válido");
            jLAlerta.setForeground(colorError);
        }else{
            jLAlerta.setText("Ticket generado correctamente");
            jLAlerta.setForeground(colorExito);
            Butaca alta = new Butaca(proyeccion, fila, columna);
            butacaData.altaButaca(alta);
            String metodoPago = (String)jCBMetodo.getSelectedItem();
            Ticket ticketNuevo = new Ticket(cliente, proyeccion, alta, LocalDate.now(), 30, true, metodoPago);
            ticketData.generarTicket(ticketNuevo);
            recargarTodo();
        }
        //LocalTime horaDesde = LocalTime.of(Integer.parseInt((String)jCBDesdeHora.getSelectedItem()), Integer.parseInt((String)jCBDesdeMinutos.getSelectedItem()));
        //LocalTime horaHasta = LocalTime.of(Integer.parseInt((String)jCBHastaHora.getSelectedItem().toString()), Integer.parseInt((String)jCBHastaMinutos.getSelectedItem()));
        
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jCBMetodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBMetodoItemStateChanged
        jLTotal.setText("$ "+calcularTotal());
    }//GEN-LAST:event_jCBMetodoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBImprimir;
    private javax.swing.JComboBox<Cliente> jCBClientes;
    private javax.swing.JComboBox<String> jCBColumna;
    private javax.swing.JComboBox<String> jCBFila;
    private javax.swing.JComboBox<String> jCBMetodo;
    private javax.swing.JComboBox<Proyeccion> jCBProyecciones;
    private javax.swing.JLabel jLAlerta;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
